<?php
namespace app\common\model;

class InfoModel extends BasicModel
{
    public $name = 'info';
    public $extendedsModel;

    //字段转型
    protected $type = [
        'extend' => 'array'
    ];

    //关联一对一 分类
    public function category()
    {
        return $this->hasOne('categoryModel','category_id','category_id')
            ->bind([
            'category_title'         => 'title',
            ])
            ->setEagerlyType(0);
    }

    //关联一对一 关联数据库扩展模型
    public function extendeds()
    {
        return $this->hasOne($this->extendedsModel,'extended_id','info_id');
    }

    // recommendation读取器
    protected function getRecommendationAttr($value)
    {
        return explode(',', $value);
    }

    // recommendation修改器
    protected function setRecommendationAttr($value)
    {
        return implode(',', $value);
    }

    // picture读取器
    protected function getPictureAttr($value)
    {
      return parent::defaultImage($value);
    }

    // 检查扩展
    public function checkExtended()
    {
        $extended = CategoryModel::get($this->category_id)->dataFieldsExtended;

        //数据库扩展关联数据操作
        if($extended['group'] == 2){

            //拼接扩展的模型命名空间
            $mysqlName  = explode('_', $extended['name'].'_Model');
            $modelName  = array_map(function($arr){
                                return ucfirst($arr);
                          }, $mysqlName);
            $modelName  = implode('', $modelName);
            $this->extendedsModel    = "app\\manage\\model\\{$modelName}";
            unset( $this->extend);

            //关联数据一起更新
            $this->together('extendeds');
        }

        return $this;
    }

    public static function create($data = [], $field = null)
    {
        return parent::create($data, $field); // TODO: Change the autogenerated stub
    }

}